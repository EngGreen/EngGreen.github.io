<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://enggreen.github.io/author/EngGreen/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://enggreen.github.io/" rel="alternate" type="text/html" />
  <updated>2024-03-04T00:09:00+09:00</updated>
  <id>https://enggreen.github.io/author/EngGreen/feed.xml</id>

  
  
  

  
    <title type="html">개발일기 | </title>
  

  
    <subtitle>Start from 0.</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">『게임 프로그래머 입문 올인원』 1. 프로그래밍 개론 및 변수와 정수</title>
      <link href="https://enggreen.github.io/course1" rel="alternate" type="text/html" title="『게임 프로그래머 입문 올인원』 1. 프로그래밍 개론 및 변수와 정수" />
      <published>2024-03-02T10:00:00+09:00</published>
      <updated>2024-03-02T10:00:00+09:00</updated>
      <id>https://enggreen.github.io/course1</id>
      <content type="html" xml:base="https://enggreen.github.io/course1">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt; &lt;a href=&quot;https://www.inflearn.com/course/%EA%B2%8C%EC%9E%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8-%EC%9E%85%EB%AC%B8-%EC%98%AC%EC%9D%B8%EC%9B%90-rookiss&quot;&gt;게임 프로그래머 입문 올인원&lt;/a&gt; by rookiss &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./course0&quot;&gt;0. OT 및 세팅&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./course1&quot;&gt;1. 프로그래밍 개론 및 변수와 정수&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;프로그래밍-개론&quot;&gt;프로그래밍 개론&lt;/h5&gt;

&lt;h4 id=&quot;cpu-ram-ssd&quot;&gt;CPU, RAM, SSD&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;CPU
    &lt;ul&gt;
      &lt;li&gt;CPU는 두뇌(계산기)의 역할을 한다.&lt;/li&gt;
      &lt;li&gt;하지만, 기억력이 짧다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;RAM (=데이터 저장소)
    &lt;ul&gt;
      &lt;li&gt;전원이 꺼지면 데이터가 소실된다. (=휘발성 메모리)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;SSD (=반영구 기억장치)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-리그-오브-레전드의-실행과정&quot;&gt;※ 리그 오브 레전드의 실행과정&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;리그 오브 레전드의 데이터를 SSD에 저장한다.&lt;/li&gt;
  &lt;li&gt;바탕화면에서 리그 오브 레전드를 실행한다.&lt;/li&gt;
  &lt;li&gt;SSD에서 실행에 필요한 필수적인 내용을 RAM으로 이동시킨다.&lt;/li&gt;
  &lt;li&gt;RAM에서 이동시킨 내용 중 실행에 필요한 부분을 CPU로 이동시킨다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이 때 SSD에서 RAM으로 이동시킨 내용은 &lt;strong&gt;CODE(TEXT), DATA, HEAP, STACK&lt;/strong&gt;의 네 부분으로 나눌 수 있다.
이 중 &lt;strong&gt;CODE(TEXT)&lt;/strong&gt; 부분에는 CPU가 해야하는 일이 포함되어 있고, 이 부분을 CPU로 전달한다. 그 후 CPU 에서 디코드(분석)한 후 실행한다.&lt;/p&gt;

&lt;p&gt;여기서 CPU, RAM, SSD등에 저장되는 정보는 ‘1010111100’과 같은 이진법의 컴퓨터 언어로 작성되어 있다. 이런 이진법의 컴퓨터 언어를 인간이 이해하고 프로그래밍하는것은, 사실상 불가능하다.&lt;/p&gt;

&lt;p&gt;그러므로 영어로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cout &amp;lt;&amp;lt; hello;&lt;/code&gt; 와 같은 문장을 타이핑 하고, 이것을 이진수로 번역해 컴퓨터가 이해할 수 있도록 돕는다.&lt;/p&gt;

&lt;p&gt;컴파일러에 작성할 수 있는 문법은 다양하며, 문법에 따른 언어들을 &lt;strong&gt;프로그래밍 언어&lt;/strong&gt;라고 부른다.&lt;/p&gt;

&lt;p&gt;이 때 번역하는 과정을 &lt;strong&gt;컴파일&lt;/strong&gt;이라고 부르며, 번역해주는 도구를 &lt;strong&gt;컴파일러&lt;/strong&gt;라고 부른다.&lt;/p&gt;

&lt;p&gt;Visual Studio는 코드 작성 및 컴파일을 할 수 있게 해주는 프로그램이다.&lt;/p&gt;

&lt;h4 id=&quot;프로그래밍-언어-별-차이-예시-python-vs-c&quot;&gt;프로그래밍 언어 별 차이 예시 &amp;lt;Python vs C++&amp;gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Python
    &lt;ul&gt;
      &lt;li&gt;문법이 간단하고 쉽다.&lt;/li&gt;
      &lt;li&gt;언어차원에서 많은 부분이 내포되어있고 관리해준다.&lt;/li&gt;
      &lt;li&gt;주로 웹, 툴 개발에 사용된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;C++
    &lt;ul&gt;
      &lt;li&gt;문법 작성이 어렵고 복잡하다.&lt;/li&gt;
      &lt;li&gt;여러 부분에서 직접 제어하고 관리가 가능해, 효율이 더 좋고 빠르다.&lt;/li&gt;
      &lt;li&gt;주로 예민한 부분인 게임 개발, 운영체제, 인공지능의 코어부분 등의 개발에 사용된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;변수의-기초&quot;&gt;변수의 기초&lt;/h5&gt;

&lt;p&gt;램 내부에 가상의 공간을 ‘&lt;strong&gt;변수&lt;/strong&gt;‘라고 부르며, 공간을 할당하는 행위를 ‘&lt;strong&gt;변수선언&lt;/strong&gt;‘이라고 부른다.&lt;/p&gt;

&lt;p&gt;변수 선언의 형식 = &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[타입] [이름];&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ex) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int hp;&lt;/code&gt; = hp라는 변수를 int라는 타입으로 설정한다는 의미.&lt;/p&gt;

&lt;p&gt;※ 끝에오는 세미콜론(;)은 C++에서 한 문장이 끝났다는 뜻이다.&lt;/p&gt;

&lt;h4 id=&quot;데이터-형식-범위&quot;&gt;데이터 형식 범위&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://learn.microsoft.com/ko-kr/cpp/cpp/data-type-ranges?view=msvc-170&quot;&gt;데이터 형식의 범위가 정리되어있는 페이지&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;대표적으로, 정수를 나타내는 데이터 타입&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Char (1바이트) / -128 ~ 127&lt;/li&gt;
  &lt;li&gt;short (2바이트) / -32,768 ~ 32,767&lt;/li&gt;
  &lt;li&gt;int (4바이트) / -2,147,483,648 ~ 2,147,483,647&lt;/li&gt;
  &lt;li&gt;long long (8바이트) / -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위의 타입 앞에 unsigned를 붙이면 범위에서 음수가 사라지고 양수의 범위가 x2+1까지 늘어난다.&lt;/p&gt;

&lt;p&gt;→ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unsigned car&lt;/code&gt; 의 범위는 0~255&lt;/p&gt;

&lt;p&gt;예를 들어, hp를 설정하는 경우 int (4바이트)정도만 사용하면 되므로 설계 전 어느 정도를 사용할지 생각이 필요하다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;이렇게 RAM에 저장되어있는 정보를 불러와 콘솔에 출력하는 과정을 ‘&lt;strong&gt;콘솔 아웃(console out)&lt;/strong&gt;‘이라 한다.&lt;/p&gt;

&lt;p&gt;콘솔 아웃의 형식 = &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cout &amp;lt;&amp;lt; [이름];&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;cout이라는 명령어에 대해서는 추후 객체지향 부분에서 다시 심도있게 공부한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;앞의 내용을 정리해서, maxHp가 200인 상황에서 포션, 부활 등으로 hp가 maxHp가 됐을 때의 hp를 출력하는 코드는 다음과 같다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;int hp;                 //hp라는 변수를 설정
int maxHp;              //maxHp라는 변수를 설정

int main()
{
    maxHp = 200;        //maxHp의 값 = 200
    
    hp = maxHp;         //hp는 maxHp와 같음

    cout &amp;lt;&amp;lt; hp;         //hp의 값을 콘솔에 출력
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;여기서 주의해야 할 부분은 hp를 직접 200으로 설정하면 추후에 maxHp가 늘어났을 경우 대응이 불가능해진다.&lt;/p&gt;

&lt;p&gt;Visual Studio에 이렇게 입력한 후, 빌드를 해보면 200이 출력된다.&lt;/p&gt;

&lt;h5 id=&quot;정수의-원리&quot;&gt;정수의 원리&lt;/h5&gt;

&lt;p&gt;데이터의 최소 단위는 0혹은 1의 표시가 가능한 ‘&lt;strong&gt;비트(bit)&lt;/strong&gt;‘이다.&lt;/p&gt;

&lt;p&gt;이 비트가 8개로 이루어진, 즉, 1001 1101과 같은 데이터를 ‘&lt;strong&gt;바이트(byte)&lt;/strong&gt;‘라고 부른다.&lt;/p&gt;

&lt;p&gt;→ mp라는 변수를 short로 설정 후, short에 306,189,112라는 값을 설정한다.&lt;/p&gt;

&lt;p&gt;그리고 빌드를 해보면 4,920이라는 엉뚱한 수가 나온다.&lt;/p&gt;

&lt;p&gt;∵ 306,189,112라는 4비트만큼의 크기를 가진 수를 설정한 타입인 2비트의 short로 출력한 결과값이 4,920이기 때문이다.&lt;/p&gt;

&lt;p&gt;즉,&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;short mp;

int main()
{
    mp = 30000;
    
    mp += 20000;
    
    cout &amp;lt;&amp;lt; mp;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;를 출력하면 50000이 나와야 하지만, short의 범위를 벗어나기 때문에 엉뚱한 수가 나타나고 이것을 ‘&lt;strong&gt;정수 오버플로우&lt;/strong&gt;‘라 부른다.&lt;/p&gt;

&lt;h4 id=&quot;진법&quot;&gt;진법&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;HEX(16진법) 2,488 / 접두어 = 0x&lt;/li&gt;
  &lt;li&gt;DEC(10진법) 9,352 → 인간 친화&lt;/li&gt;
  &lt;li&gt;OCT(8진법)  22,210 / 접두어 = 0o&lt;/li&gt;
  &lt;li&gt;BIN(2진법)  0010 0100 1000 1000 → 컴퓨터 친화 / 접두어 = 0b&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;→ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hp = 0b1100&lt;/code&gt;을 입력후 출력한 결과값 = 12&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;16진법은 2진법과 궁합이 좋다.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;∵ &lt;br /&gt;
→ 0x 2,488&lt;br /&gt;
→ 0b 0010(2) 0100(4) 1000(8) 1000(8)&lt;/p&gt;

&lt;p&gt;즉, 2진법으로 나타낸 수를 4자리마다 끊어 16진법으로 표현하면, 같은 수가 된다.&lt;/p&gt;

&lt;h5 id=&quot;변수-마무리&quot;&gt;변수 마무리&lt;/h5&gt;

&lt;h4 id=&quot;문자&quot;&gt;문자&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;char ch;

int main()
{
    ch = 120;
    
    cout &amp;lt;&amp;lt; ch;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;를 출력하면 120이 나와야 하지만, x라는 문자가 출력되는 걸 볼 수 있다.&lt;/p&gt;

&lt;p&gt;∵ char 자료형으로 선언한 변수에는, 그 숫자가 담기는 것이 아니라 그 숫자에 해당하는 아스키 코드 값이 담기기 때문이다.&lt;/p&gt;

&lt;h4 id=&quot;소수&quot;&gt;소수&lt;/h4&gt;

&lt;p&gt;float(4바이트) / 3.4E+/-38(7개의 자릿수)&lt;br /&gt;
double(8바이트) / 1.7E+/-308(15개의 자릿수)&lt;/p&gt;

&lt;p&gt;※ float의 값에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;float hp = 3.43f&lt;/code&gt;와 같이 값 뒤에 f를 붙여야 float로 인식한다.&lt;/p&gt;

&lt;h4 id=&quot;참-거짓&quot;&gt;참, 거짓&lt;/h4&gt;

&lt;p&gt;bool은 참, 거짓을 나타내는 데이터 타입이다.&lt;/p&gt;

&lt;p&gt;논리적인 값을 표현하는데 사용한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bool playSound;

int main()
{
    playSound = false;

    playSound = true;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;와 같이 사용한다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>EngGreen</name>
        
        
      </author>

      

      
        <category term="Course" />
      

      
        <summary type="html">게임 프로그래머 입문 올인원 by rookiss 0. OT 및 세팅 1. 프로그래밍 개론 및 변수와 정수</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">『게임 프로그래머 입문 올인원』 0. OT 및 세팅</title>
      <link href="https://enggreen.github.io/course0" rel="alternate" type="text/html" title="『게임 프로그래머 입문 올인원』 0. OT 및 세팅" />
      <published>2024-03-02T09:00:00+09:00</published>
      <updated>2024-03-02T09:00:00+09:00</updated>
      <id>https://enggreen.github.io/course0</id>
      <content type="html" xml:base="https://enggreen.github.io/course0">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt; &lt;a href=&quot;https://www.inflearn.com/course/%EA%B2%8C%EC%9E%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8-%EC%9E%85%EB%AC%B8-%EC%98%AC%EC%9D%B8%EC%9B%90-rookiss&quot;&gt;게임 프로그래머 입문 올인원&lt;/a&gt; by rookiss &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./course0&quot;&gt;0. OT 및 세팅&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./course1&quot;&gt;1. 프로그래밍 개론 및 변수와 정수&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;※ 강의 정보&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h2 id=&quot;게임-프로그래머-입문-올인원-c--자료구조알고리즘--stl--게임-수학--windows-api--게임-서버&quot;&gt;&lt;a href=&quot;https://www.inflearn.com/course/%EA%B2%8C%EC%9E%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8-%EC%B7%A8%EC%97%85#reviews&quot;&gt;[게임 프로그래머 입문 올인원] C++ &amp;amp; 자료구조/알고리즘 &amp;amp; STL &amp;amp; 게임 수학 &amp;amp; Windows API &amp;amp; 게임 서버&lt;/a&gt;&lt;/h2&gt;
  &lt;p&gt;어디부터 시작할지 막막한 게임 프로그래밍 입문자를 위한 All-In-One 커리큘럼입니다. C++, 자료구조/알고리즘, STL, 게임 수학, Windows API, 게임 서버 입문으로 이어지는 알찬 커리큘럼으로 게임 프로그래밍 기초를 폭넓게 공부합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/EngGreen/enggreen.github.io/assets/159286056/385180a8-a9ac-40cf-888a-86890cf5093f&quot; alt=&quot;스크린샷 2024-03-02 224828&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;강의 선택 이유&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;굉장히 만족스러웠던 &lt;a href=&quot;https://www.inflearn.com/course/%EA%B2%8C%EC%9E%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8-%EC%B7%A8%EC%97%85#reviews&quot;&gt;게임 프로그래머 취업 전략 가이드 (by Rookiss)&lt;/a&gt;강의.&lt;/li&gt;
  &lt;li&gt;책으로 공부하는 동안, 흥미를 잃지 않고 전체적인 개발과정을 겪어볼 수 있음.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;강의-커리큘럼&quot;&gt;강의 커리큘럼&lt;/h5&gt;

&lt;p&gt;C++ → 자료구조 알고리즘 → STL → 게임수학 → Windows API → 게임서버 입문&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Windows를 이용한 포트리스 모작 (게임수학에 대한 내용 학습 가능)&lt;/li&gt;
  &lt;li&gt;2D 로그라이크 제작 → 온라인 서버 연동&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;visual-studio-2022-세팅&quot;&gt;Visual Studio 2022 세팅&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://visualstudio.microsoft.com/ko/downloads/&quot;&gt;마이크로소프트 visual studio 홈페이지 접속&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;커뮤니티 → 무료 다운로드 버튼으로 셋업파일 다운 후 실행&lt;/li&gt;
  &lt;li&gt;실행 후, C++를 사용한 데스크톱 개발 및 C++를 사용한 게임 개발 체크 후 설치 진행
&lt;img src=&quot;https://github.com/EngGreen/enggreen.github.io/assets/159286056/f27f55ce-c847-48b2-9a20-f84cb15df7e4&quot; alt=&quot;스크린샷 2024-03-02 222252&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;실행 후 새 프로젝트 만들기&lt;/li&gt;
  &lt;li&gt;언어 C++, 프로젝트 형식 콘솔 설정, 콘솔 선택 후 다음
&lt;img src=&quot;https://github.com/EngGreen/enggreen.github.io/assets/159286056/9d054646-add5-4e24-9964-efd295281fb7&quot; alt=&quot;스크린샷 2024-03-02 223835&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;원하는 폴더 위치에 프로젝트 생성&lt;/li&gt;
  &lt;li&gt;위쪽 메뉴의 디버그 → 디버깅 혹은 F5(디버깅 단축키) 사용 시 다음과 같은 화면 출력
&lt;img src=&quot;https://github.com/EngGreen/enggreen.github.io/assets/159286056/e66efe86-63df-474d-a98b-d4aecbf94e40&quot; alt=&quot;스크린샷 2024-03-02 224128&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;준비 완료!&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;-visual-assist-란&quot;&gt;※ visual assist 란?&lt;/h4&gt;

&lt;p&gt;Visual assist는 Visual studio를 사용하여 코딩할 때, 도움을 주는 편리한 애드온이다.
1년에 $279정도의 가격으로 제공되며, 한 달 동안 무료버전으로 사용이 가능하다.
대부분의 게임회사에서 프로그래머에게 구매해준다고 한다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>EngGreen</name>
        
        
      </author>

      

      
        <category term="Course" />
      

      
        <summary type="html">게임 프로그래머 입문 올인원 by rookiss 0. OT 및 세팅 1. 프로그래밍 개론 및 변수와 정수</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">게임 클라이언트 프로그래머에 대해.</title>
      <link href="https://enggreen.github.io/diary1" rel="alternate" type="text/html" title="게임 클라이언트 프로그래머에 대해." />
      <published>2024-03-01T09:00:00+09:00</published>
      <updated>2024-03-01T09:00:00+09:00</updated>
      <id>https://enggreen.github.io/diary1</id>
      <content type="html" xml:base="https://enggreen.github.io/diary1">&lt;p&gt;피치 못할 사정으로 일을 그만두게 된지 한 달이 지났다.&lt;/p&gt;

&lt;p&gt;한 달 동안 그간 못 갔던 여행도 다니고 못 본 영화도 보고 푹 쉰 뒤, 오랜 꿈이였던 프로그래밍 공부를 시작해보고자 했다.&lt;/p&gt;

&lt;p&gt;관련 전공도 아니고 사전 지식도 없는 내가 당장 할 수 있는건, 인터넷 검색을 통한 자료 수집 뿐..&lt;/p&gt;

&lt;p&gt;그렇게 하루 종일 웹서핑으로 시간을 보낸 뒤 얻게 된 몇 가지 정보가 있다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;게임 프로그래머는 크게 &lt;strong&gt;서버 vs 클라이언트&lt;/strong&gt; 로 나뉜다.&lt;/li&gt;
  &lt;li&gt;클라이언트는 다시 한번 &lt;strong&gt;유니티 vs 언리얼&lt;/strong&gt; 엔진 개발자로 나뉜다.
    &lt;ul&gt;
      &lt;li&gt;둘은 경쟁관계에 있는 엔진이 아니고, 유니티는 주로 최소 규모의 2D, 모바일게임에 주로 사용되며, 언리얼은 대규모 싱글, 콘솔게임에 사용된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;온라인 학습 사이트는 대표적으로 해외사이트는 &lt;a href=&quot;https://www.udemy.com/&quot;&gt;Udemy&lt;/a&gt;, 국내에서는 &lt;a href=&quot;https://www.inflearn.com/&quot;&gt;인프런&lt;/a&gt;이 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;정말 크게 적으면 이 정도이고&lt;/p&gt;

&lt;p&gt;나같은 사람(&lt;strong&gt;&lt;em&gt;독학으로 게임 프로그래머 취업을 희망하는 사람&lt;/em&gt;&lt;/strong&gt;)이 어떻게 공부했는지, 독학해서 나온 포트폴리오는 어느 정도인지 등 찾아볼 정보의 양은 어마어마했다.&lt;/p&gt;

&lt;p&gt;특히 막막했던 부분은, &lt;em&gt;“&lt;strong&gt;어디서부터&lt;/strong&gt;” 공부를 시작해야 할지, “&lt;strong&gt;무엇을&lt;/strong&gt;” 공부해야 게임 개발자로 취직할 수 있는지&lt;/em&gt; 라는 점이다.&lt;/p&gt;

&lt;p&gt;결국, 막연히 그나마 이해할 수 있는 인프런을 들여다 보던 도중 한 강의가 눈에 띄었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h2 id=&quot;게임-프로그래머-취업-전략-가이드-by-rookiss&quot;&gt;&lt;a href=&quot;https://www.inflearn.com/course/%EA%B2%8C%EC%9E%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8-%EC%B7%A8%EC%97%85#reviews&quot;&gt;게임 프로그래머 취업 전략 가이드 (by Rookiss)&lt;/a&gt;&lt;/h2&gt;
  &lt;p&gt;게임 프로그래머 초봉 6000만원 시대! 무엇을 어떻게 공부할지 막막한 분들을 위해, 게임 업계 및 채용 절차에 대한 생생한 이야기를 준비했습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/EngGreen/enggreen.github.io/assets/159286056/31eab0d3-9917-4813-a700-abd6c3601f36&quot; alt=&quot;게임 프로그래머 취업 전략 가이드&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/EngGreen/enggreen.github.io/assets/159286056/cfeabdce-cd31-407c-bb15-7a0b952bae6f&quot; alt=&quot;스크린샷 2024-02-28 224412&quot; /&gt;&lt;/p&gt;

&lt;p&gt;제목부터 나를 위한 강의같아 보였고, 하루 종일 속 시원한 정보를 얻지못한 웹서핑에 지쳐있던 나는 바로 결제를 했다.&lt;/p&gt;

&lt;p&gt;그렇게 홀린 듯이 저녁무렵 구매한 강의를 자정이 될 무렵까지 6시간가량에 걸쳐서 완강했다.&lt;/p&gt;

&lt;p&gt;결론부터 말하자면 정말 내 상황에 딱 맞는, 나를 위한 강의였다.&lt;/p&gt;

&lt;p&gt;무겁지도 않고, 전문적인 (배경지식이 필요한) 내용도 없으며, 이직 혹은 취업을 준비하는 사람들에게 필요한 내용만 담겨있다. 또한  경력이 풍부한 강사님의 적당한 사담은 지루할 틈 없이 하룻밤새 완강할 수 있게 만들어줬다.&lt;/p&gt;

&lt;p&gt;강의를 듣고 정리한 핵심 내용은 다음과 같다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;-게임-개발-직군-소개&quot;&gt;* 게임 개발 직군 소개&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;게임 개발 직군은 크게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;테크, 아트, 디자인(기획), +QA&lt;/code&gt; 정도로 나눌 수 있으며, 모든 직군을 통틀어서 개발자라고 칭한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;모든 직군을 총괄하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PD&lt;/code&gt;가 있으며, 각 직군별로 세세한 파트가 나뉜다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그 중 내가 희망하는 &lt;strong&gt;테크&lt;/strong&gt; 부분만 집중해보면 크게는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;클라이언트, 서버 프로그래머&lt;/code&gt;로 나눌 수 있으며, 세부적으로 혹은 상황에 따라 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;툴스, 엔진, 플랫폼 프로그래머, 그리고 DBA&lt;/code&gt; 로 나눌 수 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아트팀과 디자인팀이 만든 부품을 조립하는 역할인 &lt;strong&gt;클라이언트 프로그래머&lt;/strong&gt; 는 개발 전체 팀 내 다양한 (거의 모든) 팀들과 협업이 필요하다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;-게임-개발-프로세스&quot;&gt;* 게임 개발 프로세스&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;핵심 재미 검증 [소규모 개발]
    &lt;ul&gt;
      &lt;li&gt;프로토타이핑 (10~20人)&lt;/li&gt;
      &lt;li&gt;
        &lt;h6 id=&quot;프로젝트-마일스톤-평가&quot;&gt;프로젝트 마일스톤 평가&lt;/h6&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인력 모집
    &lt;ul&gt;
      &lt;li&gt;정식 프로젝트 승격(T.O 확보)&lt;/li&gt;
      &lt;li&gt;
        &lt;h3 id=&quot;신규채용-신규팀&quot;&gt;&lt;strong&gt;&lt;em&gt;신규채용 (신규팀)&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;컨텐츠 찍어내기
    &lt;ul&gt;
      &lt;li&gt;
        &lt;h6 id=&quot;프로젝트-마일스톤-평가-1&quot;&gt;프로젝트 마일스톤 평가&lt;/h6&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;게임 출시 &amp;amp; 라이브 전환
    &lt;ul&gt;
      &lt;li&gt;
        &lt;h3 id=&quot;신규채용-라이브팀&quot;&gt;&lt;strong&gt;&lt;em&gt;신규채용 (라이브팀)&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;보통 4번과 동시에 신규 개발을 담당했던 신규팀은 대거 이탈하고, 운영을 담당할 라이브 팀을 신규채용한다.&lt;/p&gt;

&lt;h5 id=&quot;-채용에-관하여&quot;&gt;* 채용에 관하여&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;회사가 최고로 우수한 인재를 뽑는 것이 아니다.
&lt;strong&gt;팀장&lt;/strong&gt; 이 자신과 일할 사람을 뽑는 것이다.
면접관들도 일반 팀원일 뿐이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;-게임회사-채용-프로세스&quot;&gt;* 게임회사 채용 프로세스&lt;/h5&gt;

&lt;h4 id=&quot;1-서류단계-짧고-굵은-임팩트-필요&quot;&gt;1. 서류단계 (짧고 굵은 임팩트 필요)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;스펙
    &lt;blockquote&gt;
      &lt;p&gt;채용은 상대평가이다.&lt;/p&gt;

      &lt;p&gt;아무리 내가 잘해도 나보다 더 뛰어난 사람이 지원하면, 그 사람이 붙는 너무나도 단순한 원리.&lt;/p&gt;

      &lt;blockquote&gt;
        &lt;p&gt;최대한의 준비를 한다는 마인드셋이 필요하다.&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;자소서&lt;/li&gt;
  &lt;li&gt;포폴
    &lt;ul&gt;
      &lt;li&gt;지원자의 객관적인 실력과 근성을 확인할 수 있는 공정한 수단&lt;/li&gt;
      &lt;li&gt;서류심사에서 &lt;strong&gt;매우 중요한 평가 요소&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;언리얼, 유니티등의 엔진이나 DirectX, OpenGL 등의 그래픽스로 돌아가는 게임
        &lt;ul&gt;
          &lt;li&gt;언리얼이나 유니티등의 상용엔진으로 만든 작업물이 당연히 퀄리티가 더 높아야 함.&lt;/li&gt;
          &lt;li&gt;아트리소스는 구매 &amp;amp; 추출해도 무관&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;컨텐츠 양이나 게임 완성도보다 기술적인 어필이 필요함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2-기술면접-신입은-필기--과제--포트폴리오-위주&quot;&gt;2. 기술면접 (신입은 필기 / 과제 / 포트폴리오 위주)&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;면접이란 ‘같이 일하고 싶은 사람인가?’를 보는 것이다.&lt;/p&gt;

  &lt;p&gt;실력/인성/지원동기/느낌 등 수없이 많은 부분을 본다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;과제 / 코딩시험 등&lt;/li&gt;
  &lt;li&gt;필기 시험&lt;/li&gt;
  &lt;li&gt;기술 면접&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3-인사팀-면접&quot;&gt;3. 인사팀 면접&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;인성 면접&lt;/li&gt;
  &lt;li&gt;처우 협의&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;-클라이언트-vs-서버&quot;&gt;* 클라이언트 vs 서버&lt;/h5&gt;

&lt;h6 id=&quot;학습해야-할-내용&quot;&gt;학습해야 할 내용&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;공통
    &lt;ul&gt;
      &lt;li&gt;C++/STL&lt;/li&gt;
      &lt;li&gt;자료구조/알고리즘&lt;/li&gt;
      &lt;li&gt;운영체제/멀티쓰레드&lt;/li&gt;
      &lt;li&gt;네트워크&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;클라이언트
    &lt;ul&gt;
      &lt;li&gt;그래픽스 (DirectX, OpenGL)&lt;/li&gt;
      &lt;li&gt;언리얼, 유니티&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;서버
    &lt;ul&gt;
      &lt;li&gt;Windows Socket&lt;/li&gt;
      &lt;li&gt;데이터베이스&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;서버와 클라는 종이 한 장 차이다.&lt;/p&gt;

  &lt;p&gt;이분법적인 사고가 아닌 두 분야 모두에 대한 지식이 필요하다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;-목표-설정&quot;&gt;* 목표 설정&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;취업은 중간 과정이지, 최종 목표가 될 수 없다.&lt;/li&gt;
  &lt;li&gt;스타트업으로 업계 입문은 비추천 !&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;-멘탈-관리&quot;&gt;* 멘탈 관리&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;내가 떨어졌다고 해도 정말 다양한 (상상도 못한) 이유가 있을 수 있다.&lt;/li&gt;
  &lt;li&gt;BLOG HISTORY 남기기 → SPEC
    &lt;ul&gt;
      &lt;li&gt;사소한 부분의 사고 과정까지 !&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;-프로그래머-마인드&quot;&gt;* 프로그래머 마인드&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;프로그래밍은 결국 문제 해결의 연속이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;문제가 발생하면 해결하려는 노력이 필요하다.&lt;/p&gt;

&lt;p&gt;모르는 부분은 주구장창 구글링.&lt;/p&gt;

&lt;h6 id=&quot;구글은-모든-프로그래머의-스승이다&quot;&gt;구글은 모든 프로그래머의 스승이다.&lt;/h6&gt;

&lt;hr /&gt;

&lt;p&gt;정말 내가 궁금했던 내용, 도움이 되었던 내용들을 정리해보았다.&lt;/p&gt;

&lt;p&gt;이외에도 강의는 총 16개의 수업 (5시간 24분 분량)으로 이루어져있으며 OT는 무료이므로 처음 게임 프로그래밍 직군에 관심이 있거나 이직을 준비하는 분들이라면 들어볼것을 추천한다.&lt;/p&gt;

&lt;p&gt;현직을 경험하지 않은 사람들이 쉽게 알기 힘든 부분을 현직자의 입장에서 재밌고 간단하게 알 수 있다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>EngGreen</name>
        
        
      </author>

      

      
        <category term="Diary" />
      

      
        <summary type="html">피치 못할 사정으로 일을 그만두게 된지 한 달이 지났다.</summary>
      

      
      
    </entry>
  
</feed>
